pipeline {
    agent any

    tools {
        jdk 'jdk17'
    }

    environment {
        GH_ORG = 'marcinciapa'
        GH_REPO = 'actracker-api'
    }

    options {
//        lock(resource: 'actracker-api_release', extra: [[label: 'actracker_PROD']])
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    stages {

        stage('Check release readiness') {
            steps {
//                sh 'git branch -m ${CHANGE_BRANCH}'
//                sh './gradlew --no-daemon --stacktrace verifyRelease'
                  sh 'if curl -L https://api.github.com/repos/${GH_ORG}/${GH_REPO}/pulls/${CHANGE_ID} | grep \'"mergeable": "true"\'; then exit 0; else echo "PR is mergeable"; exit 1; fi;'
                  sh 'if curl -L https://api.github.com/repos/${GH_ORT}/${GH_REPO}/commits/${GIT_COMMIT}/statuses | grep \'"state": "success"\'; then exit 0; else echo "Commit check with success state not found"; exit 0; fi;'
            }
        }

        stage('Build') {
            steps {
                sh 'printenv'
                sh './gradlew --no-daemon --stacktrace clean build test'
//                script {
//                    currentBuild.displayName = readFile file: 'build/ovh.equino.version/currentVersion'
//                }
            }
        }

//        stage('DB schema migration') {
//            steps {
//                sh './gradlew --no-daemon --stacktrace :actracker-api-persistence-postgres:flywayMigrate :actracker-api-persistence-postgres:flywayInfo -PequinoDocker.remote -Pdeploy.environment=PROD'
//            }
//        }

//        stage('Deploy') {
//            steps {
//                sh './gradlew --no-daemon --stacktrace deploy -PequinoDocker.remote -Pdeploy.environment=PROD'
//            }
//        }

        stage('Merge PR') {
            steps {
//                withCredentials([usernamePassword(credentialsId: 'ci_bitbucket_app_password', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh 'curl -L -X PUT https://api.github.com/repos/${GH_ORG}/${GH_REPO}/pulls/${CHANGE_ID}/merge'
                    sh 'curl -L -X DELETE https://api.github.com/repos/${GH_ORG}/${GH_REPO}/git/refs/${CHANGE_BRANCH}'
//                }
            }
        }

    }

    post {
        cleanup {
            deleteDir()
        }
    }
}
